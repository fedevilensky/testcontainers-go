{{ $entrypoint := Entrypoint }}{{ $containerName := ContainerName }}{{ $lower := ToLower }}{{ $title := Title }}package {{ $lower }}

import (
	"context"
	"fmt"

	"github.com/testcontainers/testcontainers-go"
)

// {{ $containerName }} represents the {{ $title }} container type used in the module
type {{ $containerName }} struct {
	*testcontainers.DockerContainer
}

// {{ $entrypoint }} creates an instance of the {{ $title }} container type
func {{ $entrypoint }}(ctx context.Context, img string, opts ...testcontainers.RequestCustomizer) (*{{ $containerName }}, error) {
	req := testcontainers.Request{
		Image: img,
		Started:          true,
	}

	for _, opt := range opts {
		if err := opt.Customize(&req); err != nil {
			return nil, fmt.Errorf("customize: %w", err)
		}
	}

	ctr, err := testcontainers.Run(ctx, req)
	var c *{{ $containerName }}
	if ctr != nil {
		c = &{{ $containerName }}{DockerContainer: ctr}
	}

	if err != nil {
		return c, fmt.Errorf("generic container: %w", err)
	}

	return c, nil
}
